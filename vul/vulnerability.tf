provider "aws" {
  region = "us-east-1"
}

# Vulnerable S3 Bucket with public access
resource "aws_s3_bucket" "public_bucket" {
  bucket = "vulnerable-public-bucket"
  acl    = "public-read" # Vulnerability: Publicly accessible bucket

  versioning {
    enabled = true
  }
}

# Hard-coded secrets in the code
resource "aws_secretsmanager_secret" "example" {
  name        = "example-secret"
  description = "This is a secret with hard-coded value"
  
  secret_string = <<EOF
{
  "username": "admin",
  "password": "P@ssw0rd123!" # Vulnerability: Hard-coded secret
}
EOF
}

# Security group allowing all inbound traffic
resource "aws_security_group" "allow_all" {
  name        = "allow_all"
  description = "Allow all inbound traffic" # Vulnerability: Open to all traffic

  ingress {
    from_port   = 0
    to_port     = 65535
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"] # Vulnerability: Open to the world
  }

  egress {
    from_port   = 0
    to_port     = 65535
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

# EC2 instance with default security settings and no key pair
resource "aws_instance" "vulnerable_instance" {
  ami           = "ami-12345678" # Replace with a valid AMI ID in your region
  instance_type = "t2.micro"

  # Vulnerability: No key pair specified, making it hard to access securely
}

# IAM role with overly permissive policy
resource "aws_iam_role" "overly_permissive_role" {
  name               = "overly_permissive_role"
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action    = "sts:AssumeRole"
        Effect    = "Allow"
        Principal = {
          Service = "ec2.amazonaws.com"
        }
      }
    ]
  })
}

resource "aws_iam_policy_attachment" "attach_policy" {
  name       = "attach_overly_permissive_policy"
  roles      = [aws_iam_role.overly_permissive_role.name]
  
  policy_arn = aws_iam_policy.vulnerable_policy.arn
}

resource "aws_iam_policy" "vulnerable_policy" {
  name        = "vulnerable_policy"
  
  policy      = jsonencode({
    Version   = "2012-10-17",
    Statement = [
      {
        Action   = "*", # Vulnerability: Allows all actions on all resources
        Effect   = "Allow",
        Resource = "*"
      }
    ]
  })
}
